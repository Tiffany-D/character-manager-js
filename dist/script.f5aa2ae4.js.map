{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../js/script.js"],"names":["template","document","querySelector","edit","imageBase64","makeCharacterCardsAppear","addPostForm","url","inputImage","inputPreview","makeDisplayCardAppear","fetch","api","json","response","console","log","elem","characterTemplate","importNode","content","nameOfTheCharacter","shortDescriptionCharacter","pictureOfTheCharacter","buttonOfTheCharacter","textContent","name","setAttribute","id","shortDescription","src","image","appendChild","addEventListener","localStorage","getCharDetails","seeBtn","querySelectorAll","forEach","el","getAttribute","char","showCard","fileReader","FileReader","readAsDataURL","files","onload","result","e","preventDefault","formData","value","split","description","method","headers","body","JSON","stringify","location","reload","alert","idOfTheCharacter","confirmAlert","confirm"],"mappings":"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,ADoD3B;ACpD2B,ADqD3B;ACrD2B,ADsD3B,eCjF8B;ADkF9B;AClF8B,ADmF9B,8BCxDUsB,cA3BoB;AAAA,ADoF9B;ACpF8B,ADqF9B;ACrF8B,ADsF9B;AACA;ACvDUC,ADwDV,YCxDUA,MAhCoB,GAgCXnC,QAAQ,CAACoC,gBAAT,CAA0B,gBAA1B,CAhCW,EAgCiC;ADyD/D;ACxDID,ADyDJ,YCzDIA,MAAM,CAACE,OAAP,CAAe,UAAAC,EAAE,EAAI;AACjBA,ADyDR,cCzDQA,EAAE,CAACN,gBAAH,CAAoB,OAApB,uEAA6B;AAAA,AD0DrC;AC1DqC,AD2DrC;AC3DqC,AD4DrC;AC5DqC,AD6DrC;AC7DqC,AD8DrC;AC9DqC,AD+DrC;AC/DqC,ADgErC,+BC/D+BE,cAAc,CAACI,EAAE,CAACC,YAAH,CAAgB,QAAhB,CAAD,CADR;ADiErC;ACjEqC,ADkErC;ACjEkBC,ADkElB,wBClEkBA,IADmB;AACoC,ADmEzE;AClEYC,ADmEZ,wBCnEYA,QAAQ,CAACD,IAAD,CAAR;ADoEZ;ACtEqC,ADuErC;ACvEqC,ADwErC;ACxEqC,ADyErC;ACzEqC,AD0ErC;AC1EqC,AD2ErC;AC3EqC,AD4ErC;AC5EqC,AD6ErC,eC7EQ;AAIH,AD0EL,aC/EI;AAOAjC,ADyEJ,YCzEIA,UAAU,CAACyB,gBAAX,CAA4B,QAA5B,EAAsC,YAAK;AAC3C,ADyEJ,kBCzEUU,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACID,ADyER,cCzEQA,UAAU,CAACE,aAAX,CAAyBrC,UAAU,CAACsC,KAAX,CAAiB,CAAjB,CAAzB;AD0ER;ACzEQH,AD0ER,cC1EQA,UAAU,CAACI,MAAX,GAAoB,YACpB;AACItC,ADyEZ,gBCzEYA,YAAY,CAACqB,GAAb,GAAmBa,UAAU,CAACK,MAA9B;AACH,ADyET,eC5EQ;AAIH,ADyEL,aChFI,EAxC0B,CAiD1B;ADwEJ;ACvEI1C,ADwEJ,YCxEIA,WAAW,CAAC2B,gBAAZ,CAA6B,QAA7B;AAAA,ADyEJ,kFCzE0C,kBAAOgB,CAAP;AAAA,AD0E1C;AC1E0C,AD2E1C;AC3E0C,AD4E1C;AC5E0C,AD6E1C;AC7E0C,AD8E1C;AC7EQA,AD8ER,wBC9EQA,CAAC,CAACC,cAAF;AAEIC,AD6EZ,wBC7EYA,QAH8B,GAGnB;AACXzB,AD6EZ,0BC7EYA,IAAI,EAACzB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCkD,KAD1B;AAEXrB,AD6EZ,0BC7EYA,KAAK,EAACtB,YAAY,CAACqB,GAAb,CAAiBuB,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAFK;AAGXC,AD6EZ,0BC7EYA,WAAW,EAACrD,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CkD,KAH5C;AAIXvB,AD6EZ,0BC7EYA,gBAAgB,EAAC5B,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CkD;AAJlD,ADkFvB,yBCrF0C;ADsF1C;ACtF0C,ADuF1C,8BC9EWD,QAAQ,CAACzB,IAAT,IAAiByB,QAAQ,CAACpB,KAA1B,IAAmCoB,QAAQ,CAACG,WAA5C,IAA2DH,QAAQ,CAACtB,gBATrC;AAAA,ADwF1C;ACxF0C,ADyF1C;ACzF0C,AD0F1C;AACA;AC3F0C,AD4F1C;AC5F0C,AD6F1C,+BClFiClB,KAAK,CAACJ,GAAD,EAAM;AAC5BgD,ADkFhB,0BClFgBA,MAAM,EAAE,MADoB;AAE5BC,ADkFhB,0BClFgBA,OAAO,EAAE;AACL,ADkFpB,4CClFoC;AADX,ADoFzB,2BCtF4C;AAK5BC,ADkFhB,0BClFgBA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AALsB,ADwF5C,yBCxFsC,CAXI;ADoG1C;ACpG0C,ADqG1C;AC1FkBH,AD2FlB,wBC3FkBA,MAXwB;AAkB9BY,ADqFZ,wBCrFYA,QAAQ,CAACC,MAAT;AAlB8B,ADwG1C;ACxG0C,ADyG1C;AACA;AC1G0C,AD2G1C;ACrFYC,ADsFZ,wBCtFYA,KAAK,CAAC,cAAD,CAAL;ADuFZ;AC7G0C,AD8G1C;AC9G0C,AD+G1C;AC/G0C,ADgH1C;AChH0C,ADiH1C;ACjH0C,ADkH1C;AClH0C,ADmH1C;ACnH0C,ADoH1C,eCpHI;ADqHJ;ACrHI,ADsHJ;ACtHI,ADuHJ;ACvHI,ADwHJ;ACxHI,ADyHJ;AACA;AC5K8B,AD6K9B;AC7K8B,AD8K9B;AC9K8B,AD+K9B;AC/K8B,ADgL9B;AChL8B,ADiL9B;ACjL8B,ADkL9B;AClL8B,ADmL9B,GCnL2B;ADoL3B;ACpL2B,ADqL3B,kBCrLMpD,qBAAqB;AAAA,ADsL3B;ACtL2B,ADuL3B;ACvL2B,ADwL3B,GCxLA;ADyLA;AC3GA,AD4GA,IC5GMgC,QAAQ;AAAA,AD6Gd,sEC7GiB,kBAAOD,IAAP;AAAA,AD8GjB;AC9GiB,AD+GjB;AC/GiB,ADgHjB;AChHiB,ADiHjB;AC/GIxC,ADgHJ,YChHIA,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCuB,WAAvC,GAAqDgB,IAAI,CAACf,IAA1D;AACAzB,ADgHJ,YChHIA,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuC4B,GAAvC,oCAAuEW,IAAI,CAACV,KAA5E;AACA9B,ADgHJ,YChHIA,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CuB,WAA5C,GAA0DgB,IAAI,CAACa,WAA/D;ADiHJ;ACrHiB,ADsHjB;ACtHiB,ADuHjB;ACvHiB,ADwHjB;ACxHiB,ADyHjB;ACzHiB,AD0HjB;AC1HiB,AD2HjB;AC3HiB,AD4HjB,GC5Hc;AD6Hd;AC7Hc,AD8Hd,kBC9HMZ,QAAQ;AAAA,AD+Hd;AC/Hc,ADgId;AChIc,ADiId,GCjIA,EAOA;AD2HA;AACA;AC1HEzC,AD2HF,QC3HU,CAACC,aAAT,CAAuB,SAAvB,EAAkC+B,gBAAlC,CAAoD,OAApD,uEAA6D;AAAA,AD4H/D;AC5H+D,AD6H/D;AC7H+D,AD8H/D;AC9H+D,AD+H/D;AC/H+D,ADgI/D;AC/HU8B,ADgIV,UChIUA,gBADqD,GACpC7B,YAAY,CAAC,QAAD,CADwB;AAErD8B,ADgIV,UChIUA,YAFqD,GAEtCC,OAAO,CAAC,kDAAD,CAF+B;ADmI/D;ACnI+D,ADoI/D,gBCjIUD,YAAY,IAAG,IAHsC;AAAA,ADqI/D;ACrI+D,ADsI/D;ACtI+D,ADuI/D;AACA;ACpIUjD,ADqIV,UCrIUA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAJqD,AD0I/D;AC1I+D,AD2I/D;AACA;AC5I+D,AD6I/D;AC7I+D,AD8I/D;AC9I+D,AD+I/D,iBCzIgBL,KAAK,4DAAsDoD,gBAAtD,GAA0E;AAAER,AD0IjG,YC1IiGA,MAAM,EAAE;AAAV,AD2I/F,WC3IqB,CAN0C;ADkJ/D;AClJ+D,ADmJ/D;AC5IUxC,AD6IV,UC7IUA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA4C,AD6IV,UC7IUA,QAAQ,CAACC,MAAT;AD8IV;ACtJ+D,ADuJ/D;ACvJ+D,ADwJ/D;ACxJ+D,ADyJ/D;ACzJ+D,AD0J/D;AC1J+D,AD2J/D;AC3J+D,AD4J/D;AC5J+D,AD6J/D,CC7JE,KAYA;AACF,ADiJA;AChJA,ADiJA;AChJA,ADiJA;AChJA,ADiJA;AC/IA,ADgJA;AC9IA,AD+IA;AC9IA,AD+IA;AC9IA,AD+IA;AC9IA,AD+IA;AC9IA,AD+IA;AC9IA,AD+IA;AC9IA,AD+IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;AC7IA,AD8IA;ACzIA,AD0IA;AACA;AC1IAnD,AD2IA,qBC3IqB;AD4Irfile":"script.f5aa2ae4.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","\nimport \"regenerator-runtime/runtime\";\n//const axios = require('axios');\n\nconst template = document.querySelector('#character-tpl');\nconst edit = document.querySelector('#update-character');\nconst imageBase64 = \"data:image/jpeg;base64\";\nconst makeCharacterCardsAppear = document.querySelector(\"#display-card-character\");\nconst addPostForm = document.querySelector('.add-post-form')\nconst url = 'https://character-database.becode.xyz/characters'\nconst inputImage = document.querySelector('#img')\nconst inputPreview = document.querySelector('#preview')\n\n\n// Display all cards\nconst makeDisplayCardAppear = async () => {\n    const api = await fetch(url);\n    let response = await api.json();\n    console.log(response);\n\n    for ( let elem of response) {\n        let characterTemplate = document.importNode(template.content, true);\n        let nameOfTheCharacter = characterTemplate.querySelector(\".name-home\");\n        let shortDescriptionCharacter = characterTemplate.querySelector(\".description-home\");\n        let pictureOfTheCharacter = characterTemplate.querySelector(\".photo-home\");\n        let buttonOfTheCharacter = characterTemplate.querySelector(\"#see-character\");\n\n        nameOfTheCharacter.textContent = elem.name;\n        buttonOfTheCharacter.setAttribute(\"idChar\",elem.id)\n        shortDescriptionCharacter.textContent = elem.shortDescription;\n        pictureOfTheCharacter.src = `${imageBase64}, ${elem.image}`;\n        makeCharacterCardsAppear.appendChild(characterTemplate);\n\n        //Store id of the character in localStorage\n       buttonOfTheCharacter.addEventListener('click', ()=>{\n           localStorage[\"stored\"]=elem.id;\n\n       });\n\n\n    }\n\n    const getCharDetails = async (id) => {\n       const response = await fetch(`${url}/${id}`)\n       return await  response.json()\n    }\n\n    const seeBtn = document.querySelectorAll('#see-character') // selection de tous les boutons\n    seeBtn.forEach(el => {\n        el.addEventListener('click', async () => { // ajout event click à travers tous les boutons\n            const char = await getCharDetails(el.getAttribute('idchar')) // On prend l'id + affichage de l'objet api lié a l'ID\n            showCard(char)\n        })\n    })\n\n    inputImage.addEventListener('change', () =>{\n    const fileReader = new FileReader()\n        fileReader.readAsDataURL(inputImage.files[0])\n        fileReader.onload = ()=>\n        {\n            inputPreview.src = fileReader.result\n        }\n    })\n \n    // partie POST cards\n    addPostForm.addEventListener('submit',async (e)=>{\n        e.preventDefault()\n\n        let formData = {\n            name:document.querySelector('#name').value,\n            image:inputPreview.src.split(',')[1],\n            description:document.querySelector('#longDescription').value,\n            shortDescription:document.querySelector('#shortDescription').value\n        }\n        if(formData.name && formData.image && formData.description && formData.shortDescription) {\n\n            const result = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(formData)\n            });\n            location.reload();\n        }\n        else\n        {\n            alert('champs vides')\n        }\n    })\n\n}\n\nconst showCard = async (char) => // on défini les values aux champs\n{\n    document.querySelector('.modal-title').textContent = char.name\n    document.querySelector('.modal-image').src = `data:image/jpeg;base64,${char.image}`\n    document.querySelector('.long-description').textContent = char.description\n}\n\n//Delete request\n\n  document.querySelector(\"#delete\").addEventListener (\"click\", async()=>{\n      let idOfTheCharacter=localStorage[\"stored\"] ;\n      let confirmAlert = confirm('Are you sure you want to delete this character ?');\n      if (confirmAlert!= true) {\n          console.log('cancel');\n      }else{\n          await fetch (`https://character-database.becode.xyz/characters/${idOfTheCharacter}`, { method: 'DELETE' });\n          console.log('ok');\n          location.reload();\n      }\n  });\n\n  //Put request \n//   document.querySelector(\"#save\").addEventListener('click', async()=>{\n//       let idEdit = localStorage[\"stored\"];\n//       let alertSureOrNot = confirm('Sure you want to edit ?');\n//       if (alertSureOrNot != true) {\n          \n//       }else{\n         \n//           let formData = {\n//             name:document.querySelector('#name').value,\n//             image:inputPreview.src.split(',')[1],\n//             description:document.querySelector('#longDescription').value,\n//             shortDescription:document.querySelector('#shortDescription').value\n//         }\n//         if(formData.name && formData.image && formData.description && formData.shortDescription) {\n\n//             const result = await fetch(url, {\n//                 method: 'PUT',\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n//             location.reload();\n//         }\n//         else\n//         {\n//             alert('champs vides')\n//         }\n//       }\n//   })\n  \n  \n\n\n// Display all cards\nmakeDisplayCardAppear();\n\n\n\n\n\n\n\n\n\n "]}